* using log directory ‘/Users/songxiaoyu152/Dropbox/Density_Song/Paper_MiXcan/Github/MiXcan.Rcheck’
* using R version 4.2.3 (2023-03-15)
* using platform: x86_64-apple-darwin17.0 (64-bit)
* using session charset: UTF-8
* using options ‘--no-manual --as-cran’
* checking for file ‘MiXcan/DESCRIPTION’ ... OK
* checking extension type ... Package
* this is package ‘MiXcan’ version ‘0.1.0’
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘MiXcan’ can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking for future file timestamps ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking dependencies in R code ... WARNING
'::' or ':::' import not declared from: ‘ACAT’
Namespaces in Imports field not imported from:
  ‘Matrix’ ‘tidyverse’
  All declared Imports should be used.
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
MiXcan: no visible global function definition for ‘lm’
MiXcan: no visible global function definition for ‘coef’
MiXcan : <anonymous>: no visible global function definition for
  ‘quantile’
MiXcan_association: no visible binding for global variable ‘gaussian’
MiXcan_association: no visible global function definition for ‘glm’
MiXcan_association: no visible global function definition for
  ‘as.formula’
MiXcan_association: no visible binding for global variable ‘term’
MiXcan_association: no visible global function definition for ‘cor’
MiXcan_association: no visible binding for global variable ‘estimate’
MiXcan_association: no visible binding for global variable ‘std.error’
MiXcan_association: no visible binding for global variable ‘p.value’
MiXcan_extract_weight: no visible binding for global variable ‘weight’
MiXcan_extract_weight: no visible binding for global variable
  ‘weight_cell_1’
MiXcan_extract_weight: no visible binding for global variable
  ‘weight_cell_2’
calculateLL.1d : <anonymous>: no visible global function definition for
  ‘dnorm’
deNet_purity: no visible binding for global variable ‘sd’
deNet_purity: no visible global function definition for ‘var’
deNet_purity : <anonymous> : f: no visible global function definition
  for ‘dnorm’
deNet_purity : <anonymous>: no visible global function definition for
  ‘optim’
deNet_purity : <anonymous> : f: no visible global function definition
  for ‘dbeta’
deNet_purity : f: no visible global function definition for ‘dbeta’
deNet_purity: no visible global function definition for ‘optim’
pi_estimation: no visible binding for global variable ‘i’
pi_estimation: no visible binding for global variable ‘prop’
Undefined global functions or variables:
  as.formula coef cor dbeta dnorm estimate gaussian glm i lm optim
  p.value prop quantile sd std.error term var weight weight_cell_1
  weight_cell_2
Consider adding
  importFrom("stats", "as.formula", "coef", "cor", "dbeta", "dnorm",
             "gaussian", "glm", "lm", "optim", "quantile", "sd", "var")
to your NAMESPACE file.
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... WARNING
Undocumented code objects:
  ‘GTEx_epithelial_genes’ ‘GTEx_prior’ ‘cov_example’ ‘deNet_purity’
  ‘new_X_example’ ‘new_cov_example’ ‘new_outcome_example’ ‘x_example’
  ‘y_example’
Undocumented data sets:
  ‘GTEx_epithelial_genes’ ‘GTEx_prior’ ‘cov_example’ ‘new_X_example’
  ‘new_cov_example’ ‘new_outcome_example’ ‘x_example’ ‘y_example’
All user-level objects in a package should have documentation entries.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking contents of ‘data’ directory ... OK
* checking data for non-ASCII characters ... OK
* checking LazyData ... OK
* checking data for ASCII and uncompressed saves ... OK
* checking examples ... NONE
* checking for non-standard things in the check directory ... OK
* checking for detritus in the temp directory ... OK
* DONE
Status: 2 WARNINGs, 1 NOTE
